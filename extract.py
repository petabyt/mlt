# Open a dump file created by MLT dumper and
# Remove duplicates, translate into any language
# with google translate

# pip3 install unidecode

from unidecode import unidecode
import os, sys

DECODE = False

def dump():
    # Any special characters will be converted
    # Into @ (ascii 64).
    f = open("dump", "rb")
    contents = bytearray(f.read())
    for i in range(len(contents)):
        if contents[i] > 127:
            contents[i] = 64

    lines = contents.decode("ascii").split("\n")

    # remove duplicates, sort alphabetically
    return sorted(list(set(lines)))

# "input" is expected to have same lines as output,
# but translated into another language
def genAll():
    removeDuplicates = dump()
    o = open("output", "w")
    i = open("input", "r")

    inputText = i.read().split("\n")
    
    o.write("# Auto generated by MLT extract.py\n")
    o.write("# GPL 2, By Daniel C\n")
    
    k = 0
    for i in removeDuplicates:
        if i == '' or "@" in i or i == ' ':
            continue
    
        if unidecode(inputText[k]) == i:
            k += 1
            continue
    
        x = i + "|"
        if DECODE:
            x += unidecode(inputText[k])
        else:
            x += inputText[k]

        o.write(x + "\n")
        k += 1
    o.close()

def genTemplate():
    print("# Template generated by MLT via a menu dump file")
    removeDuplicates = dump()
    for i in removeDuplicates:    
        if i == '' or "@" in i or i == ' ':
            continue
        print(i + "|")

if sys.argv[1] == "all":
    genAll()
elif sys.argv[1] == "template":
    genTemplate()
elif sys.argv[1] == "input":
    removeDuplicates = dump()
    for i in removeDuplicates:
        if i == '' or "@" in i or i == ' ':
            continue
        print(i)
